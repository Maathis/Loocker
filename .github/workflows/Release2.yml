name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Setup the environment
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # Linux builds
      - name: Make Linux x64
        if: runner.os == 'Linux'
        run: npm run make:linux -- --arch=x64
      - name: Upload Linux x64 artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-linux-x64
          path: out/make/**/*x64*

      - name: Make Linux arm64
        if: runner.os == 'Linux'
        run: npm run make:linux -- --arch=arm64
      - name: Upload Linux arm64 artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-linux-arm64
          path: out/make/**/*arm64*

      - name: Make Linux armv7l
        if: runner.os == 'Linux'
        run: npm run make:linux -- --arch=armv7l
      - name: Upload Linux armv7l artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-linux-armv7l
          path: out/make/**/*armv7l*

      # Windows builds
      - name: Make Windows x64
        if: runner.os == 'Windows'
        run: npm run make:windows -- --arch=x64
      - name: Upload Windows x64
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-windows-x64
          path: out/make/**/*.exe

      - name: Make Windows ia32
        if: runner.os == 'Windows'
        run: npm run make:windows -- --arch=ia32
      - name: Upload Windows ia32
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-windows-ia32
          path: out/make/**/*.exe

      - name: Make Windows arm64
        if: runner.os == 'Windows'
        run: npm run make:windows -- --arch=arm64
      - name: Upload Windows arm64
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: loocker-windows-arm64
          path: out/make/**/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Get version from package.json
      - name: Get version
        id: get_version
        run: |
          echo "PACKAGE_VERSION=$(node -p 'require("./package.json").version')" >> $GITHUB_ENV

      # Create a Git tag
      - name: Create Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.PACKAGE_VERSION }}
          git push origin v${{ env.PACKAGE_VERSION }}
          
      # Download all artifacts from Build CI jobs in this workflow run
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          body: "Automated release v${{ env.PACKAGE_VERSION }}"
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
